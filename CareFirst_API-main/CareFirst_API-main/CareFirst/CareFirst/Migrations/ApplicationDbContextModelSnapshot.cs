// <auto-generated />
using System;
using CareFirst.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareFirst.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CareFirst.Model.AppSetting", b =>
                {
                    b.Property<int?>("MaxBooking")
                        .HasColumnType("int");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("CareFirst.Model.AppointmentDoctor", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("Doctor_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("AppointmentId")
                        .HasName("PK__Appointm__8ECDFCA204777518");

                    b.HasIndex("DoctorId");

                    b.HasIndex("UserId");

                    b.ToTable("AppointmentDoctor");
                });

            modelBuilder.Entity("CareFirst.Model.AppointmentNurse", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NurseId")
                        .HasColumnType("int")
                        .HasColumnName("Nurse_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("AppointmentId")
                        .HasName("PK__Appointm__8ECDFCA27E9FECBB");

                    b.HasIndex("NurseId");

                    b.HasIndex("UserId");

                    b.ToTable("AppointmentNurse");
                });

            modelBuilder.Entity("CareFirst.Model.AwarenessVideo", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VideoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoId"));

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("category");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("UploadDate")
                        .HasColumnType("date");

                    b.Property<int?>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("VideoId")
                        .HasName("PK__Awarenes__BAE5124A2A2CB6BC");

                    b.ToTable("AwarenessVideo");
                });

            modelBuilder.Entity("CareFirst.Model.BookDoctor", b =>
                {
                    b.Property<int>("BookDoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookDoctorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookDoctorId"));

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("Doctor_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("TimeBook")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("BookDoctorId")
                        .HasName("PK__BookDoct__5C665E5E2BCC2D74");

                    b.HasIndex("DoctorId");

                    b.HasIndex("UserId");

                    b.ToTable("BookDoctor");
                });

            modelBuilder.Entity("CareFirst.Model.BookNurse", b =>
                {
                    b.Property<int>("BookNurseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookNurseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookNurseId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NurseId")
                        .HasColumnType("int")
                        .HasColumnName("Nurse_id");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("TimeBook")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.HasKey("BookNurseId")
                        .HasName("PK__BookNurs__86DACD43FB357395");

                    b.HasIndex("NurseId");

                    b.HasIndex("UserId");

                    b.ToTable("BookNurse");
                });

            modelBuilder.Entity("CareFirst.Model.Disease", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiseaseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseaseId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("DiseaseId")
                        .HasName("PK__Disease__69B533A9009E97BA");

                    b.ToTable("Disease");
                });

            modelBuilder.Entity("CareFirst.Model.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoctorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("Department_Id");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MedicalCenterId")
                        .HasColumnType("int")
                        .HasColumnName("MedicalCenter_Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("DoctorId")
                        .HasName("PK__Doctor__2DC00EDFA5567581");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("MedicalCenterId");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("CareFirst.Model.DoctorDepartment", b =>
                {
                    b.Property<int>("DoctorAppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoctorAppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorAppointmentId"));

                    b.Property<string>("DepartmentPicture")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DoctorAppointmentId")
                        .HasName("PK__DoctorDe__0C56E767129044D9");

                    b.ToTable("DoctorDepartment");
                });

            modelBuilder.Entity("CareFirst.Model.DoctorMedicalCenter", b =>
                {
                    b.Property<int>("DoctorMedicalCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoctorMedicalCenterID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorMedicalCenterId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DoctorMedicalCenterId")
                        .HasName("PK__DoctorMe__B2E93E85AEC84BCF");

                    b.ToTable("DoctorMedicalCenter");
                });

            modelBuilder.Entity("CareFirst.Model.DoctorsAvailableTime", b =>
                {
                    b.Property<int>("AvailableTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AvailableTimeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvailableTimeId"));

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("Doctor_id");

                    b.Property<string>("TimeAvailable")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AvailableTimeId")
                        .HasName("PK__DoctorsA__6EC40C2486A70DF9");

                    b.HasIndex("DoctorId");

                    b.ToTable("DoctorsAvailableTime");
                });

            modelBuilder.Entity("CareFirst.Model.Nurse", b =>
                {
                    b.Property<int>("NurseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NurseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("Department_Id");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MedicalCenterId")
                        .HasColumnType("int")
                        .HasColumnName("MedicalCenter_Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NurseId")
                        .HasName("PK__Nurse__4384786950687BBD");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("MedicalCenterId");

                    b.ToTable("Nurse");
                });

            modelBuilder.Entity("CareFirst.Model.NurseDepartment", b =>
                {
                    b.Property<int>("NurseAppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NurseAppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseAppointmentId"));

                    b.Property<string>("DepartmentPicture")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NurseAppointmentId")
                        .HasName("PK__NurseDep__2E2C437A97183C8C");

                    b.ToTable("NurseDepartment");
                });

            modelBuilder.Entity("CareFirst.Model.NurseMedicalCenter", b =>
                {
                    b.Property<int>("NurseMedicalCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NurseMedicalCenterID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseMedicalCenterId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NurseMedicalCenterId")
                        .HasName("PK__NurseMed__056ABD0DDFA31F2F");

                    b.ToTable("NurseMedicalCenter");
                });

            modelBuilder.Entity("CareFirst.Model.ReviewDoctor", b =>
                {
                    b.Property<int>("ReviewDoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewDoctorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewDoctorId"));

                    b.Property<int>("AppointmentDoctorId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentDoctor_id");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("Doctor_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ReviewDoctorId")
                        .HasName("PK__ReviewDo__7E37B3A3D916E83B");

                    b.HasIndex("AppointmentDoctorId");

                    b.HasIndex("DoctorId");

                    b.ToTable("ReviewDoctor");
                });

            modelBuilder.Entity("CareFirst.Model.SupperUser", b =>
                {
                    b.Property<int>("SupperUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupperUserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupperUserId"));

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("SupperUserId")
                        .HasName("PK__SupperUs__670B66F848B8786E");

                    b.ToTable("SupperUser");
                });

            modelBuilder.Entity("CareFirst.Model.Symptom", b =>
                {
                    b.Property<int>("SymptomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SymptomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SymptomId"));

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int")
                        .HasColumnName("Disease_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SymptomId")
                        .HasName("PK__Symptom__D26ED8B612615737");

                    b.HasIndex("DiseaseId");

                    b.ToTable("Symptom");
                });

            modelBuilder.Entity("CareFirst.Model.UserTable", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId")
                        .HasName("PK__UserTabl__1788CCAC7D15E634");

                    b.HasIndex(new[] { "PhoneNumber" }, "UQ__UserTabl__85FB4E386B84F6E2")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__UserTabl__A9D10534B2810CE1")
                        .IsUnique();

                    b.ToTable("UserTable");
                });

            modelBuilder.Entity("CareFirst.Model.AppointmentDoctor", b =>
                {
                    b.HasOne("CareFirst.Model.Doctor", "Doctor")
                        .WithMany("AppointmentDoctors")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__Docto__3429BB53");

                    b.HasOne("CareFirst.Model.UserTable", "User")
                        .WithMany("AppointmentDoctors")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__User___351DDF8C");

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareFirst.Model.AppointmentNurse", b =>
                {
                    b.HasOne("CareFirst.Model.Nurse", "Nurse")
                        .WithMany("AppointmentNurses")
                        .HasForeignKey("NurseId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__Nurse__4A18FC72");

                    b.HasOne("CareFirst.Model.UserTable", "User")
                        .WithMany("AppointmentNurses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__User___4B0D20AB");

                    b.Navigation("Nurse");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareFirst.Model.BookDoctor", b =>
                {
                    b.HasOne("CareFirst.Model.Doctor", "Doctor")
                        .WithMany("BookDoctors")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK__BookDocto__Docto__3AD6B8E2");

                    b.HasOne("CareFirst.Model.UserTable", "User")
                        .WithMany("BookDoctors")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__BookDocto__User___3BCADD1B");

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareFirst.Model.BookNurse", b =>
                {
                    b.HasOne("CareFirst.Model.Nurse", "Nurse")
                        .WithMany("BookNurses")
                        .HasForeignKey("NurseId")
                        .IsRequired()
                        .HasConstraintName("FK__BookNurse__Nurse__4DE98D56");

                    b.HasOne("CareFirst.Model.UserTable", "User")
                        .WithMany("BookNurses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__BookNurse__User___4EDDB18F");

                    b.Navigation("Nurse");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareFirst.Model.Doctor", b =>
                {
                    b.HasOne("CareFirst.Model.DoctorDepartment", "Department")
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Doctor__Departme__30592A6F");

                    b.HasOne("CareFirst.Model.DoctorMedicalCenter", "MedicalCenter")
                        .WithMany("Doctors")
                        .HasForeignKey("MedicalCenterId")
                        .IsRequired()
                        .HasConstraintName("FK__Doctor__MedicalC__314D4EA8");

                    b.Navigation("Department");

                    b.Navigation("MedicalCenter");
                });

            modelBuilder.Entity("CareFirst.Model.DoctorsAvailableTime", b =>
                {
                    b.HasOne("CareFirst.Model.Doctor", "Doctor")
                        .WithMany("DoctorsAvailableTimes")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK__DoctorsAv__Docto__37FA4C37");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("CareFirst.Model.Nurse", b =>
                {
                    b.HasOne("CareFirst.Model.NurseDepartment", "Department")
                        .WithMany("Nurses")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__Nurse__Departmen__46486B8E");

                    b.HasOne("CareFirst.Model.NurseMedicalCenter", "MedicalCenter")
                        .WithMany("Nurses")
                        .HasForeignKey("MedicalCenterId")
                        .HasConstraintName("FK__Nurse__MedicalCe__473C8FC7");

                    b.Navigation("Department");

                    b.Navigation("MedicalCenter");
                });

            modelBuilder.Entity("CareFirst.Model.ReviewDoctor", b =>
                {
                    b.HasOne("CareFirst.Model.AppointmentDoctor", "AppointmentDoctor")
                        .WithMany("ReviewDoctors")
                        .HasForeignKey("AppointmentDoctorId")
                        .IsRequired()
                        .HasConstraintName("FK__ReviewDoc__Appoi__3F9B6DFF");

                    b.HasOne("CareFirst.Model.Doctor", "Doctor")
                        .WithMany("ReviewDoctors")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK__ReviewDoc__Docto__3EA749C6");

                    b.Navigation("AppointmentDoctor");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("CareFirst.Model.Symptom", b =>
                {
                    b.HasOne("CareFirst.Model.Disease", "Disease")
                        .WithMany("Symptoms")
                        .HasForeignKey("DiseaseId")
                        .IsRequired()
                        .HasConstraintName("FK__Symptom__Disease__53A266AC");

                    b.Navigation("Disease");
                });

            modelBuilder.Entity("CareFirst.Model.AppointmentDoctor", b =>
                {
                    b.Navigation("ReviewDoctors");
                });

            modelBuilder.Entity("CareFirst.Model.Disease", b =>
                {
                    b.Navigation("Symptoms");
                });

            modelBuilder.Entity("CareFirst.Model.Doctor", b =>
                {
                    b.Navigation("AppointmentDoctors");

                    b.Navigation("BookDoctors");

                    b.Navigation("DoctorsAvailableTimes");

                    b.Navigation("ReviewDoctors");
                });

            modelBuilder.Entity("CareFirst.Model.DoctorDepartment", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("CareFirst.Model.DoctorMedicalCenter", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("CareFirst.Model.Nurse", b =>
                {
                    b.Navigation("AppointmentNurses");

                    b.Navigation("BookNurses");
                });

            modelBuilder.Entity("CareFirst.Model.NurseDepartment", b =>
                {
                    b.Navigation("Nurses");
                });

            modelBuilder.Entity("CareFirst.Model.NurseMedicalCenter", b =>
                {
                    b.Navigation("Nurses");
                });

            modelBuilder.Entity("CareFirst.Model.UserTable", b =>
                {
                    b.Navigation("AppointmentDoctors");

                    b.Navigation("AppointmentNurses");

                    b.Navigation("BookDoctors");

                    b.Navigation("BookNurses");
                });
#pragma warning restore 612, 618
        }
    }
}
